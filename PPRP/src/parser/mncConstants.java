/* Generated By:JJTree&JavaCC: Do not edit this line. mncConstants.java */
package parser;

/**
 * Token literal values and constants. Generated by
 * org.javacc.parser.OtherFilesGen#start()
 */
public interface mncConstants {

	/** End of File. */
	int EOF = 0;
	/** RegularExpression Id. */
	int INTEGER_LITERAL = 7;
	/** RegularExpression Id. */
	int DECIMAL_LITERAL = 8;
	/** RegularExpression Id. */
	int HEX_LITERAL = 9;
	/** RegularExpression Id. */
	int OCTAL_LITERAL = 10;
	/** RegularExpression Id. */
	int IF = 11;
	/** RegularExpression Id. */
	int ELSE = 12;
	/** RegularExpression Id. */
	int INT = 13;
	/** RegularExpression Id. */
	int CHAR = 14;
	/** RegularExpression Id. */
	int DOUBLE = 15;
	/** RegularExpression Id. */
	int FLOAT = 16;
	/** RegularExpression Id. */
	int VOID = 17;
	/** RegularExpression Id. */
	int RETURN = 18;
	/** RegularExpression Id. */
	int WHILE = 19;
	/** RegularExpression Id. */
	int MAIN = 20;
	/** RegularExpression Id. */
	int BREAK = 21;
	/** RegularExpression Id. */
	int DEFAULT1 = 22;
	/** RegularExpression Id. */
	int SWITCH = 23;
	/** RegularExpression Id. */
	int DO = 24;
	/** RegularExpression Id. */
	int BOOL = 25;
	/** RegularExpression Id. */
	int FOR = 26;
	/** RegularExpression Id. */
	int CASE = 27;
	/** RegularExpression Id. */
	int IDENTIFIER = 28;
	/** RegularExpression Id. */
	int LETTER = 29;
	/** RegularExpression Id. */
	int DIGIT = 30;
	/** RegularExpression Id. */
	int FLOAT_NUM = 31;
	/** RegularExpression Id. */
	int INTCONSTRANT = 32;
	/** RegularExpression Id. */
	int SEMI = 33;
	/** RegularExpression Id. */
	int COLON = 34;
	/** RegularExpression Id. */
	int LB = 35;
	/** RegularExpression Id. */
	int RB = 36;
	/** RegularExpression Id. */
	int COMMA = 37;
	/** RegularExpression Id. */
	int LCB = 38;
	/** RegularExpression Id. */
	int RCB = 39;
	/** RegularExpression Id. */
	int LSB = 40;
	/** RegularExpression Id. */
	int RSB = 41;
	/** RegularExpression Id. */
	int ADD = 42;
	/** RegularExpression Id. */
	int MINUS = 43;
	/** RegularExpression Id. */
	int MULTIPLY = 44;
	/** RegularExpression Id. */
	int DIVIDE = 45;
	/** RegularExpression Id. */
	int GREATER = 46;
	/** RegularExpression Id. */
	int SMALLER = 47;
	/** RegularExpression Id. */
	int EQUAL = 48;
	/** RegularExpression Id. */
	int LE = 49;
	/** RegularExpression Id. */
	int GE = 50;
	/** RegularExpression Id. */
	int EE = 51;
	/** RegularExpression Id. */
	int NE = 52;
	/** RegularExpression Id. */
	int QUYU = 53;
	/** RegularExpression Id. */
	int AND = 54;
	/** RegularExpression Id. */
	int OR = 55;
	/** RegularExpression Id. */
	int NOT = 56;
	/** RegularExpression Id. */
	int AUTOADD = 57;
	/** RegularExpression Id. */
	int AUTOSUBTRACT = 58;

	/** Lexical state. */
	int DEFAULT = 0;

	/** Literal token values. */
	String[] tokenImage = { "<EOF>", "\" \"", "\"\\t\"", "\"\\n\"", "\"\\r\"", "<token of kind 5>", "<token of kind 6>",
			"<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>", "<OCTAL_LITERAL>", "\"if\"", "\"else\"",
			"\"int\"", "\"char\"", "\"double\"", "\"float\"", "\"void\"", "\"return\"", "\"while\"", "\"main\"",
			"\"break\"", "\"default\"", "\"switch\"", "\"do\"", "\"bool\"", "\"for\"", "\"case\"", "<IDENTIFIER>",
			"<LETTER>", "<DIGIT>", "<FLOAT_NUM>", "<INTCONSTRANT>", "\";\"", "\":\"", "\"(\"", "\")\"", "\",\"",
			"\"{\"", "\"}\"", "\"[\"", "\"]\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\">\"", "\"<\"", "\"=\"", "\"<=\"",
			"\">=\"", "\"==\"", "\"!=\"", "\"%\"", "\"&&\"", "\"||\"", "\"!\"", "\"++\"", "\"--\"", };

}
